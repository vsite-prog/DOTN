//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PokerKlijent.PokerServis {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Karta", Namespace="http://schemas.datacontract.org/2004/07/PokerServis")]
    [System.SerializableAttribute()]
    public partial class Karta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BojaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrojField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Boja {
            get {
                return this.BojaField;
            }
            set {
                if ((object.ReferenceEquals(this.BojaField, value) != true)) {
                    this.BojaField = value;
                    this.RaisePropertyChanged("Boja");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Broj {
            get {
                return this.BrojField;
            }
            set {
                if ((this.BrojField.Equals(value) != true)) {
                    this.BrojField = value;
                    this.RaisePropertyChanged("Broj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PokerServis.IPoker")]
    public interface IPoker {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoker/BaciKartu", ReplyAction="http://tempuri.org/IPoker/BaciKartuResponse")]
        bool BaciKartu(PokerKlijent.PokerServis.Karta karta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoker/BaciKartu", ReplyAction="http://tempuri.org/IPoker/BaciKartuResponse")]
        System.Threading.Tasks.Task<bool> BaciKartuAsync(PokerKlijent.PokerServis.Karta karta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoker/UzmiKartu", ReplyAction="http://tempuri.org/IPoker/UzmiKartuResponse")]
        PokerKlijent.PokerServis.Karta UzmiKartu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoker/UzmiKartu", ReplyAction="http://tempuri.org/IPoker/UzmiKartuResponse")]
        System.Threading.Tasks.Task<PokerKlijent.PokerServis.Karta> UzmiKartuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoker/dajSveNaStolu", ReplyAction="http://tempuri.org/IPoker/dajSveNaStoluResponse")]
        PokerKlijent.PokerServis.Karta[] dajSveNaStolu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoker/dajSveNaStolu", ReplyAction="http://tempuri.org/IPoker/dajSveNaStoluResponse")]
        System.Threading.Tasks.Task<PokerKlijent.PokerServis.Karta[]> dajSveNaStoluAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPokerChannel : PokerKlijent.PokerServis.IPoker, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PokerClient : System.ServiceModel.ClientBase<PokerKlijent.PokerServis.IPoker>, PokerKlijent.PokerServis.IPoker {
        
        public PokerClient() {
        }
        
        public PokerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PokerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PokerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PokerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool BaciKartu(PokerKlijent.PokerServis.Karta karta) {
            return base.Channel.BaciKartu(karta);
        }
        
        public System.Threading.Tasks.Task<bool> BaciKartuAsync(PokerKlijent.PokerServis.Karta karta) {
            return base.Channel.BaciKartuAsync(karta);
        }
        
        public PokerKlijent.PokerServis.Karta UzmiKartu() {
            return base.Channel.UzmiKartu();
        }
        
        public System.Threading.Tasks.Task<PokerKlijent.PokerServis.Karta> UzmiKartuAsync() {
            return base.Channel.UzmiKartuAsync();
        }
        
        public PokerKlijent.PokerServis.Karta[] dajSveNaStolu() {
            return base.Channel.dajSveNaStolu();
        }
        
        public System.Threading.Tasks.Task<PokerKlijent.PokerServis.Karta[]> dajSveNaStoluAsync() {
            return base.Channel.dajSveNaStoluAsync();
        }
    }
}
