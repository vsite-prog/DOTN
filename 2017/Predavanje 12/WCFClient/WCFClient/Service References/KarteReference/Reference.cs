//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClient.KarteReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Karta", Namespace="http://schemas.datacontract.org/2004/07/WCFServis")]
    [System.SerializableAttribute()]
    public partial class Karta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrojField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZnakField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Broj {
            get {
                return this.BrojField;
            }
            set {
                if ((this.BrojField.Equals(value) != true)) {
                    this.BrojField = value;
                    this.RaisePropertyChanged("Broj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Znak {
            get {
                return this.ZnakField;
            }
            set {
                if ((object.ReferenceEquals(this.ZnakField, value) != true)) {
                    this.ZnakField = value;
                    this.RaisePropertyChanged("Znak");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KarteReference.IKarte")]
    public interface IKarte {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKarte/DajKartu", ReplyAction="http://tempuri.org/IKarte/DajKartuResponse")]
        WCFClient.KarteReference.Karta DajKartu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKarte/DajKartu", ReplyAction="http://tempuri.org/IKarte/DajKartuResponse")]
        System.Threading.Tasks.Task<WCFClient.KarteReference.Karta> DajKartuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKarte/BacamKartu", ReplyAction="http://tempuri.org/IKarte/BacamKartuResponse")]
        bool BacamKartu(WCFClient.KarteReference.Karta k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKarte/BacamKartu", ReplyAction="http://tempuri.org/IKarte/BacamKartuResponse")]
        System.Threading.Tasks.Task<bool> BacamKartuAsync(WCFClient.KarteReference.Karta k);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKarteChannel : WCFClient.KarteReference.IKarte, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KarteClient : System.ServiceModel.ClientBase<WCFClient.KarteReference.IKarte>, WCFClient.KarteReference.IKarte {
        
        public KarteClient() {
        }
        
        public KarteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KarteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KarteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KarteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFClient.KarteReference.Karta DajKartu() {
            return base.Channel.DajKartu();
        }
        
        public System.Threading.Tasks.Task<WCFClient.KarteReference.Karta> DajKartuAsync() {
            return base.Channel.DajKartuAsync();
        }
        
        public bool BacamKartu(WCFClient.KarteReference.Karta k) {
            return base.Channel.BacamKartu(k);
        }
        
        public System.Threading.Tasks.Task<bool> BacamKartuAsync(WCFClient.KarteReference.Karta k) {
            return base.Channel.BacamKartuAsync(k);
        }
    }
}
